// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  username     String    @unique
  fullname     String?
  avatar       String
  email        String
  password     String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  receiver     Message[] @relation(name: "receiver")
  sender       Message[] @relation(name: "sender")
  posts        Post[]    @relation(name: "author")
  likedPostIDs String[]  @db.ObjectId
  likedPosts   Post[]    @relation(fields: [likedPostIDs], references: [id])
  // notifications Notification[]
}

model Post {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  authorId   String    @db.ObjectId
  author     User      @relation(name: "author", fields: [authorId], references: [id], onDelete: Cascade)
  likedByIDs String[]  @db.ObjectId
  likes      User[]    @relation(fields: [likedByIDs], references: [id])
  createdAt  DateTime  @default(now())
}

model Message {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  text       String
  receiverId String   @db.ObjectId
  receiver   User     @relation(name: "receiver", fields: [receiverId], references: [id])
  senderId   String   @db.ObjectId
  sender     User     @relation(name: "sender", fields: [senderId], references: [id])
  createdAt  DateTime @default(now())
}

// model Comment {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   text      String
//   userId    String   @db.ObjectId
//   user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   postId    String   @db.ObjectId
//   post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
//   createdAt DateTime @default(now())
// }

// model Notification {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   text      String
//   userId    String   @db.ObjectId
//   user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   createdAt DateTime @default(now())
// }
